name: deploy-web-app
on:
  push:
    branches:
      - main

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
    - name: Setup AWS
      run: |
          mkdir ./.aws
          touch ./.aws/credentials
          echo '${{ secrets.AWS_CREDENTIALS_FILE }}' > ./.aws/credentials
    - name: Configure AWS credentials
      id: aws-credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2  
    - name: ECR
      env:
        AWS_SHARED_CREDENTIALS_FILE: ./.aws/credentials
        AWS_PROFILE: default
        AWS_DEFAULT_REGION: us-east-2
      run: |
        aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 359409690900.dkr.ecr.us-east-2.amazonaws.com
        docker build -t disney-web-app .
        docker tag disney-web-app:latest 359409690900.dkr.ecr.us-east-2.amazonaws.com/disney-web-app:latest
        docker push 359409690900.dkr.ecr.us-east-2.amazonaws.com/disney-web-app:latest
    - name: App Runner
      id: deploy-apprunner
      uses: awslabs/amazon-app-runner-deploy@main 
      with:
        service: app-runner-image-deploy-service
        image: 359409690900.dkr.ecr.us-east-2.amazonaws.com/disney-web-app:latest       
        access-role-arn: ${{ secrets.APP_RUNNER_ARN }}
        runtime: python3        
        region: us-east-2
        cpu : 1
        memory : 2
        port: 8080
        wait-for-service-stability-seconds: 1200
      
    - name: App Runner output
      run: echo "App runner output ${{ steps.deploy-apprunner.outputs.service-id }}"
    
